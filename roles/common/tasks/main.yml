---
- name: Ensure hostname set
  hostname:
    name: "{{ inventory_hostname }}"
  when: not inventory_hostname is match('(\d{1,3}\.){3}\d{1,3}')
  register: hostname
  tags: hostname

- name: Ensure hostname is in /etc/hosts
  lineinfile:
    dest: /etc/hosts
    regexp: "^{{ ansible_default_ipv4.address }}.+$"
    line: "{{ ansible_default_ipv4.address }} {{ ansible_fqdn }} {{ ansible_hostname }}"
  register: hostname
  tags: hostname

- name: set timezone to UTC
  timezone:
    name: UTC
  register: timezone

# - name: gpu mem check
#   shell: cat /boot/config.txt | grep gpu_mem
#   changed_when: false
#   register: gpu_mem_check

# - name: reduce gpu memory
#   lineinfile:
#     path: /boot/config.txt
#     line: gpu_mem=16
#   register: gpu_mem
#   when: gpu_mem_check.stdout == ""

- name: Enabling cgroup options at boot
  copy:
    src: cmdline.txt
    dest: /boot/cmdline.txt
    owner: root
    group: root
    mode: 0755
  register: config
  tags:
    - boot
  retries: 5

- name: Setting config options at boot
  copy:
    src: config.txt
    dest: /boot/config.txt
    owner: root
    group: root
    mode: 0755
  register: config
  tags:
    - boot
  retries: 5

- name: apt-get update
  apt:
    update_cache: yes
    autoclean: yes
    autoremove: yes
    cache_valid_time: 86400
    purge: yes

- name: Set Kube Packages to not upgrade before apt-get upgrade
  shell: apt-mark hold docker-ce kubelet kubeadm kubectl
  ignore_errors: True

- name: List Packages to not upgrade (might fail - ignore)
  shell: dpkg --get-selections | grep "hold"
  register: package_result
  ignore_errors: True

- name: Print packages held from updates
  debug:
    var: package_result.stdout
    verbosity: 0

- name: apt-get upgrade
  apt:
    upgrade: full
    force: yes
  retries: 5

- name: Install raspberrypi-kernel-headers
  apt:
    # update_cache: yes
    name: "{{ item }}"
    state: present
    force: yes
  with_items:
    - raspberrypi-kernel-headers
    - python-apt

- name: Un-Set Kube Packages to not upgrade after apt-get upgrade
  shell: apt-mark unhold docker-ce kubelet kubeadm kubectl
  ignore_errors: True

- name: Reboot
  shell: sleep 2 && shutdown -r now "Ansible Reboot for /boot/config.txt Change"
  async: 1
  poll: 0
  ignore_errors: True
  when: config or hostname is changed
  tags:
    - boot
    - shutdown

- name: Wait for Reboot
  local_action: wait_for
  args:
    host: "{{ inventory_hostname }}"
    port: 22
    delay: 15
    timeout: 120
  become: False
  when: config or hostname is changed
  tags:
    - boot
    - shutdown
  retries: 5
